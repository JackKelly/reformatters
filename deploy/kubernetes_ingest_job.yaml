# This file is a template which is filled in and submitted by
# the `main.py <dataset-id> reformat-kubernetes` command.
apiVersion: batch/v1
kind: Job
metadata:
  name: $NAME
spec:
  completionMode: Indexed
  completions: $WORKERS_TOTAL
  parallelism: $PARALLELISM
  ttlSecondsAfterFinished: 604800  # 7 days
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: worker
        image: $IMAGE
        command:
        - python
        - main.py
        - "$DATASET_ID"
        - reformat-chunks
        - "$INIT_TIME_END"
        env:
        - name: DYNAMICAL_ENV
          value: prod
        - name: WORKER_INDEX
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['batch.kubernetes.io/job-completion-index']
        - name: WORKERS_TOTAL
          value: "$WORKERS_TOTAL"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: source-coop-key
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: source-coop-key
              key: AWS_SECRET_ACCESS_KEY
        resources:
          requests:
            cpu: $CPU
            memory: $MEMORY
          limits:
            cpu: $CPU
            memory: $MEMORY
        volumeMounts:
        - mountPath: "/app/data/download"
          name: ephemeral-download-vol
      volumes:
      - name: ephemeral-download-vol
        ephemeral:
          volumeClaimTemplate:
            metadata:
              labels:
                type: ephemeral
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: $EPHEMERAL_STORAGE
      securityContext:
        fsGroup: 999  # this is the `app` group our app runs under
