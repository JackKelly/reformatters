
# Once this is validated we can turn this into a cron job
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reformat-operational-ingest
spec:
  schedule: "0 7 * * *" # At 7:00 every day.
  jobTemplate:
    spec:
      backoffLimit: 1 
      ttlSecondsAfterFinished: 720 # 12 hours
      template:
        spec:
          restartPolicy: Never
          containers:
          - name: worker
            image: {{IMAGE}}
            command:
            - python
            - main.py
            - "noaa-gefs-forecast"
            - reformat-operational-update
            env:
            - name: DYNAMICAL_ENV
              value: prod
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: source-coop-key
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: source-coop-key
                  key: AWS_SECRET_ACCESS_KEY
            resources:
              requests:
                cpu: 16
                memory: "80G"
              limits:
                cpu: 16
                memory: "80G"
            volumeMounts:
            - mountPath: "/app/data"
              name: ephemeral-vol
          volumes:
          - name: ephemeral-vol
            ephemeral:
              volumeClaimTemplate:
                metadata:
                  labels:
                    type: ephemeral
                spec:
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: "500G"
          securityContext:
            fsGroup: 999  # this is the `app` group our app runs under
          nodeSelector:
            cloud.google.com/gke-spot: "true"
          terminationGracePeriodSeconds: 5